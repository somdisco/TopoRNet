// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/TopoRNet_types.hpp"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dDirMult
double dDirMult(const arma::vec& x, const arma::vec& prior, bool log_form, bool normalize);
RcppExport SEXP _TopoRNet_dDirMult(SEXP xSEXP, SEXP priorSEXP, SEXP log_formSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< bool >::type log_form(log_formSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(dDirMult(x, prior, log_form, normalize));
    return rcpp_result_gen;
END_RCPP
}
// Topographic_Product
double Topographic_Product(const arma::mat& input_coords, const arma::mat& output_coords, bool parallel);
RcppExport SEXP _TopoRNet_Topographic_Product(SEXP input_coordsSEXP, SEXP output_coordsSEXP, SEXP parallelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type input_coords(input_coordsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type output_coords(output_coordsSEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    rcpp_result_gen = Rcpp::wrap(Topographic_Product(input_coords, output_coords, parallel));
    return rcpp_result_gen;
END_RCPP
}
// Topographic_Functions
Rcpp::DataFrame Topographic_Functions(const arma::umat& inputADJ, const arma::umat& outputADJ, bool parallel);
RcppExport SEXP _TopoRNet_Topographic_Functions(SEXP inputADJSEXP, SEXP outputADJSEXP, SEXP parallelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::umat& >::type inputADJ(inputADJSEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type outputADJ(outputADJSEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    rcpp_result_gen = Rcpp::wrap(Topographic_Functions(inputADJ, outputADJ, parallel));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_trn_module();

static const R_CallMethodDef CallEntries[] = {
    {"_TopoRNet_dDirMult", (DL_FUNC) &_TopoRNet_dDirMult, 4},
    {"_TopoRNet_Topographic_Product", (DL_FUNC) &_TopoRNet_Topographic_Product, 3},
    {"_TopoRNet_Topographic_Functions", (DL_FUNC) &_TopoRNet_Topographic_Functions, 3},
    {"_rcpp_module_boot_trn_module", (DL_FUNC) &_rcpp_module_boot_trn_module, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_TopoRNet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
